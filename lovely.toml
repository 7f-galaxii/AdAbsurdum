[manifest]
version = "1.0.0"
dump_lua = true
priority = 0

# implements extra mult
[[patches]]
[patches.pattern]
target = 'functions/common_events.lua'
pattern = "elseif _c.set == 'Enhanced' then"
position = 'before'
match_indent = true
payload = '''
if specific_vars.bonus_mult then
    localize{type = 'other', key = 'card_extra_mult', nodes = desc_nodes, vars = {specific_vars.bonus_mult}}
end
'''
[[patches]]
[patches.pattern]
target = 'functions/common_events.lua'
pattern = "elseif _c.set == 'Booster' then"
position = 'before'
match_indent = true
payload = '''
if (specific_vars and specific_vars.bonus_mult) then
    localize{type = 'other', key = 'card_extra_mult', nodes = desc_nodes, vars = {(specific_vars and specific_vars.bonus_mult)}}
end
'''
[[patches]]
[patches.pattern]
target = 'card.lua'
pattern = "bonus_chips = (self.ability.bonus + (self.ability.perma_bonus or 0)) > 0 and (self.ability.bonus + (self.ability.perma_bonus or 0)) or nil,"
position = 'after'
match_indent = true
payload = '''
bonus_mult = (self.ability.bonus_mult or 0) > 0 and (self.ability.bonus_mult or 0) or nil,
'''

# Spectral seal
# [[patches]]
# [patches.pattern]
# target = "card.lua"
# pattern = "if self.seal == 'Blue' and #G.consumeables.cards + G.GAME.consumeable_buffer < G.consumeables.config.card_limit then"
# position = "before"
# payload = '''
# if self.seal == 'adabsurd_spect_seal' and #G.consumeables.cards + G.GAME.consumeable_buffer < G.consumeables.config.card_limit then
#     local card_type = 'Planet'
#     G.GAME.consumeable_buffer = G.GAME.consumeable_buffer + 1
#     G.E_MANAGER:add_event(Event({
#         trigger = 'before',
#         delay = 0.0,
#         func = (function()
#                 local card = create_card('Spectral',G.consumeables, nil, nil, nil, nil, nil, 'asdjfi')
#                 card:add_to_deck()
#                 G.consumeables:emplace(card)
#                 G.GAME.consumeable_buffer = 0
#             return true
#         end)}))
#     card_eval_status_text(self, 'extra', nil, nil, nil, {message = localize('k_plus_spectral'), colour = G.C.PERISHABLE})
#     ret.effect = true
# end
# '''
# match_indent = true